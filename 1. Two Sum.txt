Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].


Solution
==========

class Solution {
    public int[] twoSum(int[] nums, int target) {
        Arrays.sort(nums);
        
        int l = 0;
        int r = nums.length - 1;
        
        while(l < r){
            if( nums[l] + nums[r] == target ){
                return new int[] {l, r};
            } else if (nums[l] + nums[r] < target ){
                l++;
            }else{
                r--;
            }
        } return new int[] {};
    }
}



Solution 2
==========

When sorting is not allow
-----------------------

class Solution {
    public int[] twoSum(int[] nums, int target) {
                
        //int l = 0;
        //int r = nums.length - 1;
        
        for (int i = 0; i < nums.length; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                if (nums[i] + nums[j] == target) {
                    return new int[] { i, j };
                }
            }
        }
        return new int[] {};
    }
}